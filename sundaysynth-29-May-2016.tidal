-- sunday 80's bit

d3 $ sound "beats:2" # gain "0.85"

d3 silence

d2 $ stack
[
  sound "~ beats:1"
]

d1 $ every 8 (const $ stack [
  delayline $ sound "hh*hh [~*2] [hh ~] [~ cp]",
  rev $ degradeBy 0.5 $ delayline $ sound "sn:2*8",
  delayline' 0.25 "0.75" $ sound "hh-blo:2*2"
]) $ stack [
  sound "hh [~*3] [hh ~]*2",
  sound "sn:1*4",
  delayline' 0.25 "0.75 0.5" $ sound "hh-blo:2*4"
]

d1 $ stack [
  degradeBy 0.25 $ sometimes (density 2) $ sound "hh ~*3 [hh ~]*2",
  sound "bd808 ~ bd808 [bd808*2 ~]",
  delayline' 0.25 "0.65" $ sound "hh-blo:2*2",
  sound "[~ sn:2]*2"
]

d1 $ silence





-- extra

bps (120/120)

bps (130/120)

d1 $ every 8 (const $ sound "breaks152louder") # gain "0.85" $ sound "breaks152"

d1 $ silence

d2 $ degradeBy 0.25 $ sometimes (density 1.5) $ sometimes delayline $ delayline' 0.5 "0.85" $ sound "[amencutup:4 amencutup:0]*4" # delayfeedback "0.6" # delay "1.5" # resonance "0.8" # gain "0.85"

d2 $ silence

d3 $ delayline' 0.25 "0.75" $ degradeBy 0.25 $ n (slow 3 $ ((* 1) <$> (run 24))) # s "amencutup"

d4 $ slow 3 $ stack [
  every 6 (striate 4) $ n (iter 12 $ (slow 1 $ ((* 3) <$> (run 24)))) # s "amencutup",
  every 4 ((# resonance "0.8") . (# cutoff "0.5")) $ sometimes ((degradeBy 0.5) . (delayline)) $ n (run 12) # s "amencutup"
] # size "0.8" # room "0.8" # orbit "1"


d3 $ silence

d4 $ silence

d2 $ every 3 (# up "[-24 12]/2") $ every 8 (# up "-41") $ sometimes (degradeBy 0.25) $ delayline' 0.25 "0.55" $ sound "[cb808*2 ~*2]*2" # up "[-36 -48]*2"

d5 $ stack [
  delayline $ sound "hh-blo:1*4",
  sound "bd808:2*4",
  every 4 (delayline' 0.125 "0.85") $ sound "[~ ho-blo]*2"
] # size "0.5" # room "0.4"

d2 $ sound "granular:1" # cut "1"

d5 $ silence

let cuts=24

d2 $ every 2 (rev) $ fit' 1 cuts (run cuts) (iter cuts $ run cuts) (striate cuts $  sound "granular:0" # speed "1") # gain "0.85"


-- hip hoppy 90's

d1 $ every 8 (delayline' 0.125 "0.4") $ stack [
  slowcat [
    s "bd808 ~*2 [~ bd808] ~" # n "5",
    s "~ bd808 [~ bd808*2?] bd808*2" # n "5"
  ],
  slowcat [
    sound "~ ~ sd808:6 ~",
    sound "~ ~ sd808:6*2 ~"
  ],
  slowcat [
    delayline' 0.25 "0.45" $ sound "hh-blo:2*4"
  ]
]

d2 $ delayline $ slow 2 $ delayline' 0.25 "0.45" $ sound "[arpy:0*4 arpy:2*4]/2" # up "-16 -21 -29 -24"

d1 $ stack [
  every 4 ((brak) . density 2) $ sound "[bd808:2 bd808]*2",
  delayline' 0.25 "0.65" $ sound "hh*4",
  every 8 (density 2) $ density 2 $ sound "~ cp",
  degradeBy 0.25 $ sound "man01:4 man01:0"
]

d2 $ silence

d1 $ silence


-- sunday synth, Grateful dEad edition
-- some music theory... not usual for livecoding!

-- fire on the something!

-- chord progression is E B A, repeated, then F# B A E
-- major chords are all 1-3-5
-- in midi notes, that's:
-- E: E(44) F#(46) G#(48) A(49) B(51) C#(53) D#(55) E(56)
-- "3 5 7 8 10 12 14 15"

bps (105/120)

d1 $ n "63 65 67 68 70 72 74 75" # s "sinetone" # gain "1.1" # speed "0.6"

-- sounds... funny.

d2 $ n "e5 gs5 b5 e5" # s "sinetone" # gain "1.1" # speed "0.6"

-- better! Very Blade Runner (Vangelis)

d1 $ n "e1 gs1 b2 fs2" # s "ffmoog" # gain "1.1" # speed "0.6" # up "-6"

-- arpeggio
d1 $ n "e2 gs1 b1 ds3" # s "ffmoog" # gain "1.1" # speed "0.6" # up "-6"

--chord
d1 $ n "[e2, gs1, b1]*2" # s "ffmoog" # gain "1.2" # speed "0.1" # up "-18"

-- progression

-- I won't bore you with the 1.5 hrs I spent "composing" before this

d1 $ density 2 $ degradeBy 0.25 $ stack [
  slowcat [
    n "gs1 b1 e2 e3", -- E
    n "e2 gs1 b1 e3", -- E
    n "b2 ds2 e2 fs2", -- B
    n "a2 cs2 gs2 e2" -- A
  ] # s "ffmoog" # gain "1.1" # speed "0.6" # up "-6"
]

-- let's use pentatonic scales, Major are fun but ... sterile

-- pentatonic: W W (2W) W (2W)

d1 $ density 2 $ degradeBy 0 $ stack [
  slowcat [
    n "e0 fs1 gs4? cs2 ds2 e1 fs3? gs2" -- E
  ] # s "ffmoog" # gain "1.1" # up (slow 4 $ scale (-12) (-4) $ saw1)
]

d1 $ density 2 $ degradeBy 0.0 $ stack [
  slowcat [
    n "a0 b1 cs4? e2 fs2 a1 b3? cs2" -- A
  ] # s "ffmoog" # gain "1.1" # up "-6"
]

d1 $ density 2 $ degradeBy 0.0 $ stack [
  slowcat [
    n "b0 cs1 ds4? fs2 gs2 b1 cs3? ds2" -- B
  ] # s "ffmoog" # gain "1.1" # up "-6"
]


d1 $ density 2 $ degradeBy 0.0 $ stack [
  slowcat [
    n "fs0 gs1 a4? cs2 ds2 fs1 gs3? a2", -- F#
    n "fs0 gs1 a4? cs2 ds2 fs1 gs3? a2", -- F#
    n "a0 b1 cs4? e2 fs2 a2 b3? cs2", -- A
    n "a2 b1 cs4? e2 cs2 a3 b3? fs2", -- A
    n "b0 cs1 ds4? fs1 gs2 b1 cs3? fs2", -- B
    n "b4 cs1 ds4? fs2 gs2 b1 cs3? ds2", -- B
    n "b0 cs2 ds4? fs3 gs4 b1 cs3? ds2", -- B
    n "b4 cs1 ds4? fs4 gs1 b1 cs3? ds2" -- B
  ] # s "ffmoog" # gain "1.2" # up "-6"
]


d1 $ density 2 $ degradeBy 0.0 $ stack [
  slowcat [
    n "fs0 gs1 a4? cs2 ds2 fs1 gs3? a2" -- F#
  ] # s "ffmoog" # gain "1.2" # up "0"
]




-- pentatonic 2

d1 $ sometimes (rev) $ density 2 $ degradeBy 0.25 $ stack [
  slowcat [
    n "e0 fs1 gs4 gs2 ~ b2 fs3 gs2",
    n "e0 b5 gs4 cs2 ~ ds2 fs3 gs2",
    n "b0 gs5 ds4 fs2 ~ fs2 ds3 b1",
    n "a0 e1 cs4 gs2 ~ gs2 ds3 gs2"
  ] # s "ffmoog" # gain "1.2" # up "-6"
]

-- major

d1 $ density 2 $ whenmod 16 4 (const $
  slowcat [
    n "fs2 fs3 a2 cs2", -- F#
    n "b2 ds2 e2 fs2", -- B
    n "a2 cs2 gs2 e2", -- A
    n "gs2 b3 e2 e3" -- E
  ] # s "ffmoog" # gain "1.1" # speed "0.6" # up "-6")
$ stack [
    slowcat [
      n "e2 gs3 fs3 e2", -- E
      n "gs3 b1 b3 e3", -- E
      n "b3 e2 ds4 fs2", -- B
      n "a2 cs2 a3 cs4" -- A
    ]
  ] # s "ffmoog" # gain "1.1" # speed "0.6" # up "-6"


d1 $ density 2 $ degradeBy 0.25 $ stack [
  slowcat [
    n "fs2 fs3 a2 cs2", -- F#
    n "b2 ds2 e2 fs2", -- B
    n "a2 cs2 gs2 e2", -- A
    n "gs2 b3 e2 e3" -- E
  ] # s "ffmoog" # gain "1.1" # speed "2" # up "-12"
]

d1 $ density 2 $ degradeBy 0.25 $ stack [
  slowcat [
    n "fs2*4 cs2*2", -- F#
    n "b2*2 e2*2", -- B
    n "[a3 a6]*2", -- A
    n "e2*2 [gs3 cs4]*2 e3" -- E
  ] # s "ffmoog" # gain "1.1" # speed "2" # up (slow 16 $ scale (-24) 0 $ sine1)
]

d3 $ silence


d3 $ stack [
  delayline' 0.125 "0.55" $
  slowcat [
  sound "[sn606:1 ~]*2" # gain "0.7",
  sound "sn606:1*4" # gain "0.7"
],
  sound "~ ~ cy808?:5 ~" # up "-8" # gain "0.8",
  degradeBy 0.25 $ every 2 (density 2) $ density 2 $ sound "hh-blo*2"
] # size "0.4" # room "0.3"


-- part 2!

d3 $ stack [
  every 8 (# gain "0") $ slowcat [
    delayline' 0.125 "0.65" $ sound "[sn606 ~]*2",
    sound "sn606 ~ sn606 [~*2 sn606*2]",
    delayline' 0.125 "0.65" $ sound "[sn606 ~]*2",
    sound "sn606 ~ sn606*2 [~*2 sn606*4]"
  ] # gain "0.7" # orbit "2",
  delayline' 0.125 "0.65" $ density 2 $ slowcat [
    sound "~ ~ ho [ho ~]",
    sound "ho ~ ~ [ho ~]"
  ] # gain "0" # size "0.4" # room "0.6" # orbit "2",
     every 6 (# gain "0") $ density 2 $ slowcat [
    delayline' 0.125 "0.55" $ sound "hh-blo:2*4",
    sound "~ [hh-blo:2*2] ~ [cp ~]",
    sound "[cp:1 hh-blo:2]*2 ~ [cp*2]",
    sound "cy808:4*2"
  ] # gain "0.8" # orbit "2",
  every 2 (rev) $ every 4 (brak) $ sound "bd808 ~ bd808:2 [~ bd808:1]" # gain "0.9",
  sound "sn [hh*2] sn [hh*2]" # gain "0.8",
  every 2 (brak) $ every 3 ((rev) . degradeBy 0.25) $ delayline' 0.125 "0.66" $ sound "sd808:4*4" # speed "0.8"
    # gain "0"
]
