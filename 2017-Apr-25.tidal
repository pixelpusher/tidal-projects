import Sound.Tidal.Scales

bps (128/120)


-- slower 
--
d1 $ stack [
 n "3(8,12)" # s "champbreakcutup",
 n "4(5,12,1)" # s "champbreakcutup",
 n "5(7,12,2)" # s "champbreakcutup"
] # speed "0.8"



d2 $ every 6 (within (0,0.25) ((rev) . (# speed "-1") )) 
   $ iter 4 
   $ superimpose ((0.125 ~>) . (# gain "0.85")) 
   $ every 4 (0.25 ~>) 
   $ sound "[serbia:5 ! serbia:7 serbia:4]!2" # gain "[1 0.85]!8"

d4 $ whenmod 8 6 (const $ s "") $ every 6 ((density 1.5) .(# speed "1.5")) $ every 8 (# speed "-1") $ sound "serbia:10/2"

d3 
  $ n (slowcat [ 
    "12(5,8)",
    "4(7,8)",
    "4(2,8)"
  ]) 
  # s "[bdsynth, bsn]" # gain "1.2"



d3 $ slow 2 $ n (toScale minor ((+) <$> "[2,-5] [-2,-1]" <*> (slow 8 $ "[cs4 ab4]"))) #s "dubby rough2" # up "[0 2]/4" # sustain "2.5" # gain "0.7"


d6 $  palindrome $ every 4 (ghost) $ n (iter 4 $ run 8) # s "serbia" # cut "2" 
  # cutoff (slow 8 $ scale 200 800 $ sine) # resonance "0.3"

-- breakbeats start here

d1 $ density 1 $ every 8 (const $ palindrome $ n "1*4 0*2 3 [0 1]" # s "champbreakcutup") $ n (within (0,0.5) (density 2) $ iter 2 $ slow 2 $ (run 16)) # s "champbreakcutup" # speed "0.8"


d3 $ slow 2 $ n (toScale major ((+) <$> "[0 1 2 3]" <*> "cs2")) # s "ChicagoPad2" # cut "0" # sustain "2" # note2 "[48 54]/4" # note3 "44 60" # gain "0.85"

d4 $ every 4 (# up "12 -12") 
   $ palindrome 
   $ density 2 
   $ iter 2 
   $ e 4 12 $ n "cs6 ~ af5 fs8" # s "donk" # gain "0.9"

d4 $ density 2 $ iter 2 $ degree (run 8) |+| degree "[<-10 -8>,-4]" # s "donk" # scale_p "minor"  # sustain "0.12" # speed (slow 8 $ scale 0.3 2 sine)

d4 $ density 2 $ iter 2 $ degree (run 8) |+| degree "[<-10 -8>,-4]" # s "moogbasstone" # scale_p "minor"  # sustain "0.1" # cutfreq (slow 8 $ scale 400 1600 sine)

let breakit p = every 4 ((density 4) . (iter 2) . (slow 2) . (chop 8)) $ p
 
-- clean
d1 $ every 4 (# speed "0.75") $ n "0*2" # s "breaks" # speed "1.5" # crush "5"  

d1 $ every 6 (breakit) $ every 4 (# begin "0.5") $ n "4" # s "breaks" # speed "0.775" # cut "1" # hresonance "0.3" # hcutoff "<1000 1200 1400>" # size "0.4" # room "0.4"

d1 $ every 4 ((density 4) . (iter 2) . (slow 2) . (chop 8)) $ n "3" # s "breaks" # speed "0.80" 

d1 $ n "3" # s "breaks" # speed "0.80" # cutoff "800" # resonance (slow 8 $ scale 0 0.8 $ saw)  

d2 $ every 2 (within (0,0.25) (density 2)) $ delayline' 0.125 "0.85" $ n "[2 3]*4" # s "bch" # gain "1.3" # speed "1.8" # room "0.4" # size "0.4"

d6 $ every 12 (breakit) $ n "[8 7](<[3 5]!2 2 7>,8)" # s "bsn" # gain "1.2" # speed "1"

d5 $ every 8 (breakit) $ stack [
    every 6 (rev) $ n "[0 1]*1([<3 5>],8,1)" # s "hc808" # speed "0.2" # gain "1.2",
  -- superimpose ((0.125 ~>) . ( # speed "1")) $ 
    n "25*4" # s "asher" # speed "3"
    --delayline' 0.125 "0.85" $ n "[1 3]*2" # s "click" ,
    --n "19" # s "asher" # gain "1.2" # speed "0.8" -- perception
--  n "~ 12" # s "asher"  -- i don't know
]

d1 $ stack [
  n "[0 2](<4!3 6>,8)" # s "bd808" # gain "1.2",
  n "1(<12 16>,8)" # s "bch"
] # size "0.2" # room "0.3"


-- noooooo

d2 $ stack [
      slow 4 $ degree "-12 -8" # s "dubby" # sustain "<8 7>" # scale_p "minor" 
  ]

-- moooody synth
--
d2 $ stack [
      slow 4 $ degree "[<-12 -8>, <4 1 4 5>] [-10,[12? 2]]" # s "dubby" # sustain "<5 7 4 6>" # scale_p "minor" 
  ]

d2 $ stack [
      every 4 (within (0,0.5) (density 2)) $ density 2 $ degree "[<-14 -12>] [-10]" # s "dubby" # sustain "<1 1 5 1 0 2>" # scale_p "minor" 
  ]


-- nope

d6 $ delayline $ e 8 12 $ sound "bsn:0 bsn:1"

-- alt synth pad 2

d1 $ slow 4 $ n (toScale minor "[0,2,4] [0,7,9]") |+| n "<a4 g4>" # s "profit5" # note2 "78" # note3 "60" # sustain "2.25" # cutfreq (slow 8 $ scale 300 1000 sine) # hcutoff "200" # resonance (slow 12 $ scale 0 0.4 saw) # gain (slow 16 $ scale 0.8 0.9 sine)


-- start here

bps (128/120)

-- speed 2

bps (148/120)

-- pad

d1 $ slow 4 $ n (toScale dorian "[0] [3]") |+| n (toScale major "<c5 g5>") # s "ChicagoPad2" # note2 "48" # note3 "72" # sustain "2.5" # cutfreq (slow 8 $ scale 400 800 sine) 

# cutoff "1200" # resonance (slow 12 $ scale 0 0.2 saw) # gain (slow 16 $ scale 0.8 1 sine)

-- melody1

d2 $ slow 2 $ superimpose ((density 0.5) . off 0.125 (|+| degree "<-8 -12>")) $ s "moogbasstone*4" # degree (slow 4 $ iter 2 $ "0 2 4 7") # scale_p "<dorian hexDorian>" # octave "<6>" # room "0.4" # size "0.4"

-- melody 2

d2 $ slow 1 $ superimpose ((density 0.5) . off 0.125 (|+| degree "<-7 -12 -12 8>")) $ s "moogbasstone*8" # degree (slow 4 $ iter 2 $ "0 2 4 7") # scale_p "<dorian hexDorian>" # octave "<6 7 6 5>" # sustain "0.5" # room "0.4" # size "0.4"

-- other bd 

d3 $ whenmod 8 6 (const $ s "") $ degradeBy 0.25 $ slow 1 $ iter 2 $ degree ((+ 1) <$> (iter 4 $ (run 8))) # scale_p "minor" |+| degree "<0 12>" |+| degree "[0 6 0 2]/8" # s "bdsynth" # tuning "just" # room "0.4" # size "0.4"


-- drumzzz

d4 $ stack [
  n "[0 1](6,8)" # s "bch" # room "0.4" # size "0.7",
  n "5(<3 5 3 1>,8,1)" # s "serbia" # speed "<1 0.5>",
  n "8([4 2],8)" # s "boh",
  every 8 (const $ n "22*8" # gain "1.4") $ n (iter 4 $ run 8) |+| n "2 4 8" # s "amencutup" # speed "2"
] # orbit "1"

-- low and highs

d5 $ stack [
  sound "bd808:0 ~ bd808:2 ~" # gain "1.2",
  every 8 (superimpose (0.125 ~>)) $ sound "[sn606 bch:4](3,8)",
  n "[2 4](6,8)" # s "boh" # cut "2"  # speed "[1,2]" # gain (slow 4 $ scale 0.7 1 sine)
]

d4 $ palindrome $ every 4 (ghost) $ n (iter 4 $ run 8) # s "amencutup" # gain "1" # speed "1.5"




let ddd a b c = delay a # delayfeedback b # delaytime c

d2 $ slow 2 
   $ superimpose ((off 0.625 $ iter 8))  
   $ every 4 ((rev) . (degradeBy 0.2) . (|+| n "-12"))
   $ every 2 (within (0,0.25) (density 2)) 
   $ n ((+) <$> (toScale minor (palindrome $ iter 2 $ ((+ 2) <$> (slow 2 $ run 16)))) <*> "<a4 e5>") |+| n "-12"
     # s "moogbasstone" # cutfreq (slow 4 $ scale 400 1200 saw1) 
     # sustain "0.8 0.25"


d3 $ superimpose (off 0.25 (|+| n "7" )) $ n (toScale ionian (run 8)) |+| n "[a6]" # s "donk" # octave "<4 5>" # ddd "0.7" "0.4" "0.125" # crush "[2 4 6 8]/3" # gain "0.8"
