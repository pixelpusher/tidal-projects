
-- another tidal jam 2017 Mar 5

cps (0.6)

d4 $ every 4 (0.25 <~) $ slowcat [
    slow 2 $ n "~ [0 1] ~ 12",
    slow 1  $ n "3 ~ 7 ~"
] # s "bdsynth" # sustain "2.25" # gain "1.3"


d5 $ slow 4 $ slowcat [
       n ((+) <$> "[0,12] 0 [2,5] [0 12?]" <*> (toScale minor "[f4 c4]*2"))
        ] # s "rough" # gain "0.9" # sustain "1.5" # size "0.3" # room "0.2" # delay "0.9" # delayfeedback "0.5" # delaytime "0.125" # resonance (slow 8 $ scale 0.01 0.3 $ sine1) # cutoff (slow 6 $ scale 100 3000 $ tri1)

d4 $ slow 1 $ slowcat [
    n ((+) <$> (toScale minPent "0 1 2 3") <*> "c5*4")
  ] # s "bdsynth" # sustain "0.4" # room (slow 8 $ scale 0.1 0.4 $ sine1) # size "0.4" # hcutoff "80" # hresonance (slow 12 $ scale 0 0.5 $ sine1) # gain "1.4" # delay "0.7" # delayfeedback "0.5" # delaytime "0.125" # resonance (slow 8 $ scale 0.01 0.3 $ sine1) # cutoff (slow 6 $ scale 100 3000 $ tri1)



-- doesn't fit...
d5 $ every 4 ((within (0,0.5) ((density 4) . (degradeBy 0.2))) . (within (0.5,1) (density 2))) $ n "[0 1]*2" # s "bdsynth" # sustain "[0.2 0.4]*2" # crush "8" # delay "0.3" # delayfeedback "0.6" # delaytime "0.875" # gain "1.4"

d1 $ every 9 ((within (0,0.5) ((density 3) . (degradeBy 0.2))) . (superimpose (rev))) $ every 4 ((density 4) . (rev) . (degradeBy 0.2)) $ whenmod 4 1 (within (0,0.5) (density 2)) $ n ((+) <$> "[c7 c6 c7 c6]/4" <*> (toScale whole "[0 1 3 4]/4")) # s "rough" # gain "0.7" # delay "0.7" # delaytime "1.125" # delayfeedback "0.5"

d2 $ do x <- "[4 8 2 6]/6"
        every 3 (# gain "1") $ rarely ((within (0,0.5) (density 4))) $ slow x $ n ((+) <$> "[0,-2]*4" <*> "[c7 b6 gs3 c7 d4]/7") # s "dubby" # sustain "[4 2 3 1.5]/3" # gain "0.8" # resonance "0.4" # cutoff (slow 16 $ scale 180 3000 $ tri1) # delay "0.8" # delaytime "0.5" # delayfeedback "0.8" 

d4 $ do x <- "[1 2 1 3]/8"
        every 2 (0.125 ~>) $ every 4 (const $ n "b4 b3" # s "bdsynth" # sustain "4" # gain "1.3" # velocity "2 4") $
            slow x $ n ((+) <$> (toScale minPent (iter 4 $ (run 4)) ) <*> "b4*4") # s "bdsynth" # sustain (slow 8 $ scale 0.3 4 $ tri1) # gain "1.4" # velocity (slow 12 $ scale 1 5 $ saw1) # room "0.2" # size "0.6"


d3 $ n ((+) <$> (toScale minPent (slowcat [ 
        "[0,3,-4]!3",
        "[0,3,5!3",
        "[2,4,7]!3",
        "[0,3,5]!3"
        ])
        ) <*> "b5!3") # s "supervibe" # gain "0.6" # modfreq (slow 16 $ scale 0.1 0.7 $ sine1) # decay "0.7" # sustain (slow 8 $ scale 0.5 1.5 $ sine1) # delay "0.9" # delayfeedback "0.5" # delaytime "0.125" # resonance (slow 3 $ scale 0.01 0.3 $ sine1) # cutoff (slow 2 $ scale 100 3000 $ tri1)



d3 $ n ((+) <$> (toScale minPent (slowcat [ 
        "[3,5]!3",
        "[-1,3]!7",
        "[4,8]!3",
        "[3,5](6,8)"
        ])
        ) <*> "b1!3") # s "supervibe" # gain "0.8" # modfreq (slow 16 $ scale 0.1 0.4 $ sine1) # decay "0.4" # sustain (slow 8 $ scale 2.5 3.5 $ sine1)



d5 $ do x <- "[1 3 1 2 3 1]/7"
        every 4 (0.5 <~) $ every 8 (const $ s "" ) 
          $ slow x $ every 3 (# room "0.65") $ stack [
                   sound "[~ champbreakcutup:4] champbreakcutup:3 [bride champbreakcutup:14] champbreakcutup:3?" # speed "[0.75 1 2 1 1.5]/8",
                   sometimes ((density 2) . (degradeBy 0.2)) $ n "[2 1]!3" # s "bch" # gain "[1 0.9]!7"
                 ] # room "0.4" # size "0.4"

cps (-1)

d7 $ do x <- (slow 4 $ "1 2 0.5 0.5 4")
        density 1 $ every 4 (within (0,0.25) (# gain "0")) $ density x $ iter 8 $ iter 4 $ (every 2 (rev )) $ slow 4 $ chop 16 $ sound "[breaks:4 breaks:5]/1" # delay "0.3" # delaytime "0.125" # delayfeedback "0.7" # gain "0.9"

cps 0.6
