-- mellow and jammy sonic textures
-- Dec 25th, xmas time livecoding
-- from oscjockey / bit lip

d5 $ slow 24 $ striate' 64 0.125 $ sound "cows" # gain (slow 32 $ scale 0.5 0.85 $ saw1)
-- # size "0.3" # hresonance "0.3" # hcutoff (slow 24 $ scale 300 1400 $ tri1)

d6 $ slow 2 $ randcat [
  n "~ 3 ~ ~",
  n "",
  n "~ 2 ~ ~",
  n "",
  n "",
  n "",
  n "~ ~ 5 ~"
  ] # s "woman01" # gain "0.85" # delay "0.8" # delayfeedback "0.85" # delaytime "0.25" # orbit "3"


import Sound.Tidal.Scales

d2 $ silence

-- start nice and easy
-- bit of minor pentatonic

d5 $ n ((+) <$> "[0 0, -12 -15 14 9]" <*> (listToPat minPent)) # s "moogbasstone" # gain (slow 4 $ scale 0.9 1.4 $ sine1) # sustain "1.2"

d4 $ n ((+) <$> "[0 ~ 0 ~, -12 ~ -10 ~]" <*> (listToPat minPent)) # s "moogbasstone" # gain (slow 4 $ scale 0.9 1.4 $ sine1) # sustain "1.2"

d4 $ sometimes (density 2) $ density 2 $ n ((+) <$> "[0 ~ 0 ~, -12 ~ -10 ~]" <*> (listToPat minPent)) # s "moogbasstone" # gain (slow 4 $ scale 0.9 1.4 $ sine1) # sustain (slow 16 $ scale 0.6 1 $ sine1)

d5 $ slow 2 $ sound "bride ~ ~ ~" # gain "0.85" # delay "0.7" # delayfeedback "0.8" # delaytime "0.25"


d2 $ stack [
    n (toScale minPent "0 2 3 5"),
    n ((+) <$> "[3 -12 6]/12" <*> (toScale minPent "0 2 4")),
    n ((+) <$> "[2 -12 12]/12" <*> (toScale minPent "-3 -4 -5"))
  ] # s "superhex" # gain "0.65"

d3 $ (every 8 (superimpose (slow 2))) $ every 2 (slow 3) $ slow 2 $ stack [
  every 8 (const $ degradeBy 0.1 $ n "[2 1]*6" # s "bch") $ n "[[2 1] 0]!1" # s "bch",
  slow 2 $ n "0 ~ 2 ~" # s "bd808" # gain "1.3 1.5",
  every 8 (const $ n "3 0 3 [0 1] ~ 1 [~ 4?] 0" # s "bsn") $
    every 6 (slow 2) $ slow 2 $ n "3 ~ 0 [~ 1] ~ ~ [~ 4?] 0" # s "bsn"
] # room "0.4" # orbit "1"

solo $ d3 $ density 2 $ stack [
  every 4 (density 2) $ slow 2 $ n "0 ~ 2 ~" # s "bd808" # gain "1.3 1.5",
  slow 2 $ every 6 ((density 2) . (degradeBy 0.2)) $ n (iter 4 $ run 8) # s "bch",
  slow 2 $ n "0 ~ ~ [~ 0]" # s "boh"
]

d3 $ density 2 $ stack [
  slow 2 $ n "0 ~ ~ [~ 0]" # s "boh"
]

d3 $ every 16 (const $ stack [
  slow 2 $ n "0 ~ 2 ~" # s "bd808" # gain "1.3 1.5",
  slow 2 $ every 6 ((density 2) . (degradeBy 0.2)) $ n (iter 4 $ run 8) # s "bch",
  slow 2 $ n "0 ~ ~ [~ 0]" # s "cp"
]) $ (every 8 (superimpose (slow 2))) $ every 2 (slow 3) $ slow 2 $ stack [
  every 8 (const $ degradeBy 0.1 $ n "[2 1]*6" # s "bch") $ n "[[2 1] 0]!1" # s "bch",
  slow 2 $ n "0 ~ 2 ~" # s "bd808" # gain "1.3 1.5",
  every 8 (const $ n "3 0 3 [0 1] ~ 1 [~ 4?] 0" # s "bsn") $
    every 6 (slow 2) $ slow 2 $ n "3 ~ 0 [~ 1] ~ ~ [~ 4?] 0" # s "bsn"
] # room "0.4" # orbit "1"

-------- one melody for 16, another for 16

d4 $ (0.5 ~>) $ slowcat [
    density 4 $ n (toScale minPent "[0 2 4 6]/16"),
    n ((+) <$> "[3 -12 6]/12" <*> (toScale minPent "0 2 4"))
  ] # s "superhex" # gain "0.7" # sustain "4"

d2 $ slow 2 $ slowcat [
    n (toScale minPent "[0 2 4 6]/16"),
    n ((+) <$> "[3 -12 6]/12" <*> (toScale minPent "0 2 4"))
  ] # s "moogbasstone" # gain "1.4" # sustain "4" # cutfreq (slow 16 $ scale 600 2000 $ sine1)
