-- BITLIP ---------

-- edit functions.tidal first

d2 $ n "4(4,8)" # s "hh2"

-- start here
bps (130/120)

-- pad

t1 (anticipateIn 4) $ slow 4 $ n (toScale major "[0] [2]") |+| n (toScale major "<c4 g4>") # s "ChicagoPad2" # note2 "52" # note3 "60" # sustain "2.25" # cutfreq (slow 8 $ scale 400 800 sine) # cutoff "900" # resonance (slow 12 $ scale 0 0.4 saw) # gain (slow 16 $ scale 0.7 0.9 sine) # decay "2"

-- melody1

let moogmel2  = (notes !! 3)

d1 $ every 6 (# oct "[6 5]!8")
   $ every 4 ((fastbreak) . (rev))
   $ whenmod 8 4 ((fastbreak) . ((1/2) <~) . (iter 2) . (rev))
   $ superimpose (((1/4) ~>) . (iter 2) . (slow 2) . (|+| degree "10"))
   $ degree (moogmel2 + "<0!2 2 0>") # moog # moogscale # oct ("<4 3 4!2>") 



d1 
   $ iter 4 $ rev $ iter 2
   $ superimpose ((slow 2) . (# s "sn808") . (# crush "3")) 
   $ every 7 (slow 2)
   $ degree (every 3 (+ "0 2 4") $ m1 + (every 2 ((1/8) ~>) $ ("0 0 2 7"))) # moog # oct "[5 [4,6]]/7" # cutfreq (slow 4 $ scale 200 1800 saw1) # crush "3" # moogscale # gain "0.9" |+| degree "[-12 -8 -12]/5"
 
d2 
   $ every 2 (fastbreak)
   $ every 8 ((fast 2) . (degradeBy 0.2))
   $ every 6 ((iter 2) . (rev))
   $ off (1/8) ((sometimes (slow 2)) . (# oct "3"))
   $ every 3 ((1/4) ~>)
   $ superimpose ((slow 2) . (# moog) . (# moogscale) . (# oct "4") . (|+| degree (fast 2$  iter 2 $ "0 2 4 7")))
   $ off (1/8) (# s "hh2")
   $ off (1/4) (# s "bdsynth")
   $ n (slow 2 $ m1) # s "bd606"


d1 
   $ off (1/4) ((slow 2) . (# s "bd808"))
   $ off (1/8) (# s "hh2")
   $ degree (every 3 (delayline' (1/8) "0.9") $ (notes !! 3)) # moog # moogscale # oct "4"

-- how about "<-7 -12!2 -4>" ?
-- <5 6> and "<-8 -12>"
:m + System.Random

do i <- randomRIO (0,((length notes) - 1) ::Int)
   let melly = notes !! i
   print melly
   --t2 (clutchIn 8)
   d2
      $ every 4 (fastbreak)
      $ superimpose ((fast 2) . (# s "bch") . (# cutoff (slow 4 $ scale 200 1200 sine1))
      $ slow "0.5"
      $ off (1/4) (|+| oct "<1 2>")
      $ off (1/2) (|+| degree "<-8 -12>")
      $ off (1/8) (|+| degree "<-7 -12!2 -4>")
      $ s "moogbasstone*4" # degree (slow 4 $ iter 2 $ melly) # moogscale # octave "<5 6>" # gain "0.8" # room "0.4" # size "0.4" # gain (scale 0.2 0.9 sine1)



-- other bd 

d3 $ degradeBy 0.25 $ slow 1 $ iter 2 $ degree ((+ 1) <$> (iter 4 $ (run 8))) # scale_p "minor" |+| degree "<0 12>" |+| degree "[0 6 0 2]/8" # s "bdsynth" # tuning "just" # room "0.4" # size "0.4"


-- DONK IT UP PART 1

d1 $ density 2 $ every 4 (|+| octave "<-1 1>") 
   $ palindrome 
   $ iter 4 
   $ degree "[~ 0] 4 ~ [~ 2]" |+| degree "<0 -2>" # scale_p "<majPent minPent>" # octave "[7 5 6]/6" # s "donk"

-- t4 (clutchIn 2)  
d4
   -- $ every 3 ((fast 2) . (iter 2) . (rev))
   $ overlay (every 8 (# s "bd606:2") $ s "[~ bd606:5]!2" # gain "1.2") 
   -- $ every 8 (overlay (delayline' (1/8) "0.9" $ s "sndr606:5*4")) 
   $ overlay (s "~ [~ [sndr606:2*2]/2] ~ [sndr606:3 sndr606:4*2?]")
   $ overlay (delayline' (1/16) "0.9" $ s "hh2*2")  
   $ overlay (s "~ cp-echo/4 ~ ~ ")
   $ overlay (rev $ density 2 $ delayline' (2/16) "0.8" $ s "[~ hh-blo:0]!4" # gain "0.9")
   $ silence 
   


-- drumzzz

d4 $ stack [
  density 2 $ n "[0 1](6,8)" # s "bch" # room "0.4" # size "0.7",
  n "5(<3 5 3 1>,8,1)" # s "serbia" # speed "<1 0.5>",
  n "0([4 2],8)" # s "cp",
  every 8 (const $ n "22*8" # gain "1.4") $ n (iter 4 $ run 8) |+| n "2 4 8" # s "amencutup" # speed "2"
] 

-- low and highs

d5 $ stack [
  sound "bd808:0 ~ bd808:2 ~" # gain "1.2",
  every 8 (superimpose (0.125 ~>)) $ sound "[sn606:0 bch:4](3,8)",
  n "[2 4](6,8)" # s "boh" # cut "2"  # speed "[1,2]" # gain (slow 4 $ scale 0.7 1 sine)
]

d6 $ every 5 ((slow 2) . (rev) . (iter 2))
   $ every 2 (fast 2) $ iter 4 $ loopAt 1 $ chop 8 $ sound "breaks:0"

--- next bit

bps (124/120)

cps (-1)

--- DEEEEP HOUSEEEEEE ---
-- by BITLIP
-- 2017 May 7th


d2 $ whenmod 8 2 (delayline' (1/16) "0.9") $ n "0(2,16,2)" # s "serbsn" # speed (slow 8 $ scale 0.8 1.2 sine1)

d1 $ slow 2 $ n "0" 
  # s "kmart" # gain "0.8" # begin "0.3" # end "0.60" # speed "0.4" # delay "0.7" # delayfeedback "0.6" # delaytime "1/8" # resonance (slow 12 $ scale 0.1 0.3 sine) # cutoff (slow 16 $ scale 200 1000 saw)

d3 $ density 2 $ iter 2 $ slow 8 $ palindrome $ iter 16 $ chop 32 $ n "0" # s "kmart" # gain "0.8" # speed "0.8" # delay "0.7" # delayfeedback "0.4" # delaytime "0.125" # resonance (slow 12 $ scale 0.1 0.3 sine) # cutoff (slow 16 $ scale 200 1000 saw) # cut "5"

d1 $ s "kmart/4" # gain "0.8" # speed "0.8"

-- DONK A TRONK -----

d7 $ every 2 (const $ s "") $ every 3 ((delayline' (1/16) "0.9" )) $ degree "~ ~ ~ [0 0]" # s "donk" # scale_p "minPent" 

d2 
   -- $ overlay (n "[~ 1]/2 3/2" # s "sd808" # speed "0.8")
   $ overlay (n "[8/1 ~] ~ [~ 4/2] ~" # s "hh2" # speed "1")
   -- $ palindrome $ delayline' 0.125 "0.9" $ every 4 (within (0,0.25) (density 3)) 
   -- $ density 2
   $ overlay (sound "bch:7*4" # size "0.4" # room "0.4" # speed "[3.85 1.68]*8" # gain "1")
   $ silence 

d5 $ n "[0 2]([2 3],8)" # s "bd808" # gain "1.1"

d6 $ slow 4 $ n "2(2,4)!3 0(4,8)" # s "bd606"

d9 $ iter 2 $ fast 1 $ delayline' (1/8) "0.8" $ n "3(<4 2 4 4>,8)" # s "hh2" # size "0.4" # room "0.6" # speed "<-2 2 -1 3>"

d6 $ n "1(<3 3 6 2>,8,1)" # s "sd808" # size "0.5" # room "0.4" # speed "1.5"

bps (160/120)

let faststart p = (within (0,0.125) ((fast 2))) p


d7 $ n "1(<1 2 2 2>,4,2)" # s "sd808"


bps (130/120)

--t4 (anticipateIn 2)
d4 
  $ iter 2 
  $ slow 1 
  $ slowcat [
    degree ("[0] ~ [~ 0] [~ 0]" + "[0 2 0 0 1 3 1 -1]/8") # scale_p "minor" # octave "3" # ctranspose "2"
  ] # s "moogbasstone" # gain "0.5" # sustain "0.65" # cutfreq "660" # cutoff "240" # resonance "0.4"

d4 $ every 3 ((slow 2) . (|+| oct "2"))
   $ every 8 (# ctranspose "-4")
   -- $ off (1/4) ((fast 2) . (|*| degree "2") . (|*| sustain "0.5"))
   $ superimpose (|+| degree "<2 2>") 
   $ degree "[0]!4" # scale_p "minor" # octave "3" # cutfreq (slow 8 $ scale 200 700 sine1) # s "moogbasstone" # sustain "0.5"
   # gain "0.8" # ctranspose "2"

t3 (clutchIn 4) $ slow 2 $ degree "7(8,16,1)" # octave "[2,3]" |+| degree "[0!3 -2]/8" # s "profit5" # cutfreq "200 900" # scale_p "minPent" # sustain "0.25!3 0.3" # size "0.3" # room "0.3" # cut "3" # rq (slow 16 $ scale 0.1 0.8 sine1) # lforate "2" # lfowidth "0.8"


t3 (xfadeIn 4) $ slow 2 $ degree "3(9,16,1)" # octave "[2,3]" |+| degree "0" # s "profit5" # cutfreq "200 900" # scale_p "minPent" # sustain "0.25!3 0.3" # size "0.3" # room "0.3" # cut "3" # rq (slow 16 $ scale 0.1 0.8 sine1) # lforate "2" # lfowidth "0.8"

t4 (xfadeIn 8) $ slow 2 $ degree "3([6 10],16,<3 4>)" # octave "<4 3>" # s "moogbasstone" # cutfreq "200 900" # scale_p "minPent" # sustain "0.25!3 0.1" # size "0.6" # room "0.3" # cut "1" # gain "0.9"

-- LET's GET DEEEPER 
-- next bit...

d4 $ (0.5 ~>)
   $ every 8 (# ctranspose "17")
   $ every 6 ((density 2 ) . (# speed "2"))
   $ every 3 ((0.25 ~>)) 
   $ density 1 
   $ degree "[~ 2] ~" # speed "1" # ctranspose "5" # scale_p "hexMajor7" # s "vibsawpluck" # sustain "0.25" # orbit "4" # size "0.4" # room "0.4"

bps (108/120)

-- danger - big synth
d5 $ (0 ~>)
   $ every 8 (# ctranspose "-26")
   $ every 3 ((0.25 ~>)) 
   $ density 0.25 
   $ gain (density 16 $ scale 0.3 1.5 sine1) # degree "0 ~" # speed "1" # ctranspose "-26" # scale_p "minor" # s "dubby" # sustain "6"


d6 
   $ off (1/16) ((slow 2) . (# up "2"))
   $ every 2 (iter 4) $ n (run 8) # s "amencutup" # speed "<1 2 1 -2 1 0>"

d1 
   -- $ delayline' 0.375 "0.85" 
   $ stack [
 n "[0 1](5,16)" # s "amencutup",
 n "2(4,8)" # s "amencutup",
 n "3(4,8,1)" # s "amencutup"
] # speed "1.25" 

d7 $ whenmod 4 2 (const $ silence) $ n "1(5,8)" # s "amencutup" # speed "0.8"

-- CRASHHH
--
d8 $ density 2 $ delayline' 0.25 "0.95" 
   $ every 4 ((density 1) . (# speed "0.05") . (# cut "0")) 
   $ n "0" # s "cb808" # speed "0.1" # cut "2"

d9 $ palindrome $ stack [
       delayline' 0.875 "0.9" $ n "2 ~" # s "[bd808,cp]",
       sound "sn*4"
   ]


d2 $ every 4 (faststart . (degradeBy 0.2)) $ sound "hh2:0(16,16)" # speed (slow 8 $ scale 0.5 4.5 sine1)

-- next again

d2 $ slow 2
   $ every 2 (density 2) 
   $ every 6 (density 2)
   $ every 4 (# degree (density 4 $ "4 [~ 4] [~ ~] [0 ~]")) 
   $ slow 1 
   $ degree "0 [~ 0] [7 4] [-1 ~]"  |+| degree "[0 -3]/4" # scale_p "[dorian]/4" |+| degree (slow 1 $ cycleChoose [0,2..6]) # octave "3" # s "moogbasstone" # sustain "0.3" # cut "4" # gain "0.8"

d5 $ degree "[3,5](5,16,1)" # octave "[5]" # s "bdsynth" # cutfreq "500" # scale_p "minPent" # sustain "0.2!3 0.3" # gain (slow 4 $ scale 0.5 1 tri)

-- drums 2
--
d6 $ overlay ( n "0(2,4)" # s "bd606")
   $ every 8 ((within (0,0.125) (density 2))) $ every 16 (delayline' 0.125 "0.9") 
   $ whenmod 16 15 (# n "8(2,16)") $ n "6(2,16)" # s "sd808" # speed "0.9" # gain "0.9" # size "0.4" # room "0.3"

d8 $ slow 4 $ degree "[<2 4>]" # s "ChicagoPad2" # octave "7" # scale_p "minorPent" # cutfreq "400" # decay "0.8" # gain "0.8"


---- KRAFTWERK
--

d10 $ silence

bps (124/120)

bps (85/120)

let inst2 = ctranspose "<0 -5>" # scale_p "<minor major>" # s "moogbasstone" 

d6 $ superimpose (fast 2) $ degree (slowcat [
       "[~ 0 ] [~ 7] 0 ~",
      slow 2 $ iter 2 $ palindrome $ "[~ 0 ] [~ 7] 0 ~"
    ]) # cutfreq (slow 4 $ scale 200 1600 sine1) # inst2 # octave "<3 5>" # gain "0.9"


d2 $ every 6 (const $ delayline' (1/8) "0.9" $ n (iter 4 $ palindrome $ run 8) # s "amencutup" # speed "0.75")
   $ every 8 (const $ s "sndr606:1*4 hh*2 sndr606:2*2 sndr606:3") 
   $ overlay (n "[0 ~ 2/2 ~]" # s "bd606")
   $ overlay (n "[~ [~ 1] ~ 3/2]" # s "sd808" # gain "1.2")
   $ overlay (n "[1/4 ~ 2/3 ~]" # s "woman01" # speed "0.8")
   -- $ fast "[1 2]/3" $ delayline' (1/8) "0.9" $ overlay (n "[0 1]*2" # s "bch")
   $ silence

d3 $ every 3 (fast 2) $ every 4 (# speed "0.5") $ every 2 ((iter 2) . (chop 4)) $ stack [
   slow 4 $ n (run 8) # s "man01"
] # speed "0.8 1 2 1"

d3 $ every 2 (delayline' (1/8) "0.9") $ every 6 (const $ s "hh-blo:1(4,8)") $ overlay (s "hh-blo(6,16)")
   $ every 4 (fastGap 2) $ overlay (s "bd606:2(4,8)")
   $ silence

  
t7 (xfadeIn 4) 
   
d7 $ iter 2 $ rev
   $ off (1/4) ((|+| oct "<-3 -1 2 1>"))
   $ slow 2 $ (0.5 <~) $ degree (density 2 $ slowcat 
      [
        "[~ 0] [~ 7] [0 4] 2",
        "[7 3] [~ 2] 0 0"
      ]) # ctranspose "<0 -5>" # scale_p "<minor major>" # s "moogbasstone" # octave "[5]" # cutfreq "400" # accelerate "2"

d6 $ (0 <~) $ degree (density 2 $ slowcat 
      [
        "[~ 0] [~ 7] [0 4] 2",
        "[7 3] [~ 2] 0 0"
      ]) # ctranspose "<0 -5>" # scale_p "<minor major>" # s "moogbasstone" # octave "[3]" # cutfreq "400" # accelerate "2"

d4 $ off (1/8) (fast 2) $ rev $ (0 <~) $ degree (density 2 $ slowcat 
      [
        "[~ 0] [~ 7] [0 4] 2" + "[7/2]",
        "[7 3] [~ 2] 0 0" - "7/3"
      ]) # ctranspose "<0 -5>" # scale_p "<minor major>" # s "profit5" # octave "[5 6]" # cutfreq (slow 4 $ scale 200 1600 sine1) # accelerate "2"


----- PIANO END

d9 $ slow 2 $ (0.125 <~) $ every 7 ((# ctranspose "2") . (# scale_p "minor")) 
   $ superimpose ((# ctranspose "3") . (# scale_p "major"))
   $ degree (density 1 $ slowcat 
      [
        "0 [~ ~] 0 ~",
        "0 [~ ~] 0 ~"
      ]) # ctranspose "<0 -5>" # scale_p "<minor major>" # s "superpiano" # octave "[6,5]" # cutfreq "2600" # sustain "2.25" # gain "0.8" # delay "0.85" # delaytime "0.25" # delayfeedback "0.7"


-- maybe not
d7 $ every 4 ((iter 2) . (slow 2 )) 
   $ density "<1 2 1>" 
   $ degree (slowcat [
  "0 [~ 2] [[~ -7] 4] [1 ~]",
  "~ [1 -3] [[7 -7] 4] [1 ~]"
  ]) |+| degree "[3 6]/8" # scale_p "hexDorian" # octave "[7 6]/8" # sustain ("0.75 0.15!7" * 1.5) # s "donk" # cutfreq "880" # cut "2"

-- maybe?
--

d6 $ delayline' 0.125 "0.9" $ degree (rarely (rev) $ density 0.5 $ "5 [7 ~] [~ 4] [3/2 1]") |+| degree (slow 2 $ cycleChoose [0,2..12]) # s "moogbasstone" # scale_p "dorian" # octave "[2,4]" # gain "0.7"

bps (124/120) 

d3 $ every 8 ((degradeBy 0.4) . (density 1.25)) $ sometimes (delayline' 0.125 "0.9") $ stack [
  n "1(6,16)" # s "hh-blo",
  n "0(10,16,1)" # s "ho-blo"
  n "7(5,16)" # s "ho-blo",
  -- n "[0 2 1]([3 1],8)" # s "bsn" # speed "0.5" # gain "1.2",
  n "1(<5 8>,8,1)" # s "bd808"
] # gain "0.7"

d5 $ density "<2 1>" $ sound "hh2:7*8" # size "0.4" # room "0.4" # speed "[3.85 1.68]*8" # gain "1" 

d1 $ every 3 (rev) 
   $ slow "<1 1 2>" $ every 4 (delayline' (1/8) "1") 
   $ stack [
     n "0(4,16)" # s "rose",
     n "4(6,16,1)" # s "champbreakcutup",
     n "13(10,16,1)" # s "champbreakcutup"
    ] # speed "[0.4,0.8]" # room "0.3" # size "0.3" # gain "0.8" 

d2 $ every 2 (density 2) 
   $ every 6 (density 2)
   $ every 4 (# degree (density 4 $ "4 [~ 4] [~ ~] [0 ~]")) 
   $ slow 1 
   $ degree "0 [~ 0] [7 4] [-1 ~]"  |+| degree "[0 -3]/4" # scale_p "[dorian]/4" |+| degree (slow 1 $ cycleChoose [0,2..6]) # octave "<3 4>" # s "moogbasstone" # sustain "0.3" # cut "4" # gain "0.9"

--
d9 $ superimpose (0.125 ~>) 
   $ palindromes
   $ every 4 (ghost) 
   $ n (iter 4 $ run 8) # s "amencutup" # gain "1" 

